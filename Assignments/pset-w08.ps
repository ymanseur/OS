%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Tue Nov  3 22:48:21 2015
%%DocumentNeededResources: font Times-Roman
%%+ font Helvetica-Bold
%%+ font Courier
%%+ font Times-Bold
%%DocumentSuppliedResources: procset grops 1.19 1
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Bold@0 ENC0/Times-Bold RE/Courier@0 ENC0/Courier RE
/Helvetica-Bold@0 ENC0/Helvetica-Bold RE/Times-Roman@0 ENC0/Times-Roman
RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 48 Q
(PS 8/pg 1)41.55 E(\2512015 Jef)119.78 E 2.5(fH)-.25 G(akner)-2.5 E/F1
11/Helvetica-Bold@0 SF(Pr)251.451 97 Q(ob)-.22 E(lem 1 -- using strace)
-.11 E/F2 11/Times-Roman@0 SF(The)58 110 Q/F3 11/Courier@0 SF(strace)
3.39 E F2 .639(command under Linux is used to run a program with system\
 call tracing enabled.)3.39 F .639(This allo)6.139 F .639(ws you to)
-.275 F .616
(see the system calls that are being made along with their return v)58
123 R .617(alues, and other e)-.275 F -.165(ve)-.275 G .617
(nts such as signal deli).165 F -.165(ve)-.275 G .617(ry and).165 F
2.794(handling. strace)58 136 R .044(can also be used to attach tracing\
 to an already-running process. Please read the man page for strace.)
2.794 F .206(Then, write a v)58 149 R .207
(ery simple C program to output a \214x)-.165 F .207
(ed message to standard output.)-.165 F .207
(Run this program with strace and)5.707 F(observ)58 162 Q 2.75(et)-.165
G(he system calls made.)-2.75 E(\(no need to attach output for part 1\))
5.5 E F1(Pr)245.472 188 Q(ob)-.22 E(lem 2 -- pure assemb)-.11 E -.165
(ly)-.11 G F2 .196(Write a pure assembly language program to write a me\
ssage to standard output using the)58 201 R F3(write)2.945 E F2 .195
(system call directly)2.945 F(from assembly)58 214 Q 2.75(,w)-.715 G
(ith no help from the standard C library or the C compiler)-2.75 E 5.5
(.T)-.605 G(herefore you will write a)-5.5 E .031(.S \214le, assemble i\
t to a .o \214le using as, and transform it into an e)60.75 227 R -.165
(xe)-.165 G .032(cutable a.out \214le using ld.).165 F/F4 11
/Times-Bold@0 SF .032(Repeat: do not use cc!)5.532 F F2 .849
(The lecture notes e)58 253 R .848(xplain the API for both 32-bit \(usi\
ng INT $0x80\) and 64-bit \(using SYSCALL\).)-.165 F .848(Be mindful of)
6.348 F .083(which API you are running under)58 266 R 5.583(.F)-.605 G
.083(or 32-bit, use the \215ag --32 to as and -m elf_i386 to ld.)-5.748
F -.165(Fo)5.584 G 2.834(r6).165 G .084(4-bit, use --64 for as)-2.834 F
1.338(and elf_x86_64 for ld.)58 279 R 1.337(An a.out which has been \
\215agged as 32-bit architecture by ld will be run by the k)6.838 F
1.337(ernel in)-.11 F .268(32-bit mode, e)58 292 R -.165(ve)-.275 G
3.018(ni).165 G 3.018(fy)-3.018 G .268(our system is nati)-3.018 F -.165
(ve)-.275 G .268(ly a 64-bit system.).165 F .269
(Since the APIs are incompatible, if you ha)5.768 F .599 -.165(ve w)-.22
H .269(ritten to).165 F .731(the 64-bit API b)58 305 R .731
(ut assembled/link)-.22 F .73(ed as 32-bit, your program will be g)-.11
F .73(arbage and will not run.)-.055 F(Con)6.23 E -.165(ve)-.44 G(rsely)
.165 E 3.48(,a6)-.715 G(4-bit)-3.48 E 5.108
(program can not be run at all if you are nati)58 318 R -.165(ve)-.275 G
5.108(ly running in 32-bit mode.).165 F 5.109(The system header \214les)
10.609 F 1.523(/usr/include/asm/unistd_32.h and /usr/include/asm/unistd\
_64.h contain the system call numbers for each API.)58 331 R(Or)7.022 E
(,)-.44 E(you can "google" this information.)58 344 Q .816
(Attach a screenshot sho)58 370 R .817(wing your assemble/link b)-.275 F
.817(uild process.)-.22 F .817
(Attach the strace output from running this program)6.317 F(sho)58 383 Q
.683(wing that it successfully made the write system call, and the outp\
ut from the program sho)-.275 F .683(wing that the message)-.275 F -.11
(wa)58 396 S 2.75(sw).11 G(ritten to the standard output.)-2.75 E F1(Pr)
260.091 422 Q(ob)-.22 E(lem 3 -- e)-.11 E(xit code)-.165 E F2 .484(If y\
our program contains just a write system call and nothing else, what ha\
ppens after the write?)58 435 R(Wh)5.985 E 3.235(yd)-.055 G 3.235(oy)
-3.235 G .485(ou think)-3.235 F .984(this is \(e)58 448 R .984
(xplain in your write-up\)?)-.165 F(No)6.484 E 2.414 -.715(w, a)-.275 H
.983(dd an e).715 F .983(xit system call so that the program e)-.165 F
.983(xits with a speci\214c non-zero)-.165 F(return code.)58 461 Q(Sho)
5.5 E 2.75(wt)-.275 G(hat this w)-2.75 E(ork)-.11 E
(ed via strace, and also by looking at the shell v)-.11 E
(ariable $? after e)-.275 E -.165(xe)-.165 G(cution.).165 E F1(Pr)
227.102 487 Q(ob)-.22 E(lem 4 -- system call v)-.11 E(alidation)-.22 E
F2 .626
(Introduce deliberate errors in your system call, such as passing an in)
58 500 R -.275(va)-.44 G .626
(lid address for the write string, or passing an).275 F(in)58 513 Q
-.275(va)-.44 G(lid system call number).275 E 5.5(.S)-.605 G(ho)-5.5 E
2.75(ww)-.275 G(hat happens via strace.)-2.75 E F1(Pr)241.358 539 Q(ob)
-.22 E(lem 5 -- system call cost)-.11 E F4 .695
(This is an optional extra-cr)58 552 R .695(edit pr)-.198 F .695
(oblem f)-.198 F .695(or under)-.275 F .695(grad students, b)-.11 F .695
(ut a r)-.22 F(equir)-.198 E .695(ed pr)-.198 F .695(oblem f)-.198 F
.695(or those taking the)-.275 F(course at grad le)58 565 Q -.11(ve)
-.165 G(l).11 E F2(:)A .701
(Write a series of simple test programs in C:)58 591 R .701
(A\) measure the cost of an empty loop using enough iterations to get a)
6.201 F .372(meaningful number)58 604 R 5.872(.B)-.605 G 3.122(\)n)
-5.872 G .922 -.275(ow a)-3.122 H .372
(dd to that empty loop a call to an empty function.).275 F .371
(C\) replace the empty function with)5.872 F 3.717(ac)58 617 S .968
(all to a v)-3.717 F .968(ery simple system call such as getuid.)-.165 F
.968([Be careful...use strace to mak)6.468 F 3.718(es)-.11 G .968
(ure you are actually making a)-3.718 F 2.086(system call.)58 630 R
2.086(Some things lik)7.586 F(e)-.11 E F3(getpid\(\))4.836 E F2 2.086
(which are documented as system calls may be cached by user)4.836 F(-le)
-.22 E -.165(ve)-.275 G(l).165 E(libraries])58 643 Q .744
(Report on the cost in nanoseconds \(look at the)58 662 R F3
(clock_gettime)3.494 E F2 .744
(library function\) of one loop iteration, one user)3.494 F(-)-.22 E
1.686(mode function call \(not counting the loop iteration\) and one sy\
stem call \(not counting the user)58 675 R 1.686(-mode o)-.22 F -.165
(ve)-.165 G(rhead\).).165 E .582(Approximately ho)58 688 R 3.333(wm)
-.275 G .583(uch more e)-3.333 F(xpensi)-.165 E .913 -.165(ve i)-.275 H
3.333(sas).165 G .583(ystem call compared to a function call?)-3.333 F
.583(Discuss your reasoning for)6.083 F(wh)58 701 Q 2.75(yt)-.055 G
(his is the case.)-2.75 E 0 Cg EP
%%Trailer
end
%%EOF
